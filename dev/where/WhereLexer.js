// Generated from ./Where.g4 by ANTLR 4.5.3
// jshint ignore: start
var antlr4 = require('antlr4');


var serializedATN = ["\u0003\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd",
    "\u0002\u0014\u00b9\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0003\u0002\u0003\u0002\u0003\u0002\u0003",
    "\u0002\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0006\u0003",
    "\u0006\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003\u0007\u0003",
    "\b\u0003\b\u0003\b\u0003\b\u0003\b\u0003\t\u0003\t\u0003\t\u0003\t\u0003",
    "\t\u0003\t\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003",
    "\r\u0003\r\u0003\r\u0003\r\u0003\r\u0003\u000e\u0003\u000e\u0003\u000e",
    "\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e",
    "\u0005\u000ef\n\u000e\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u0010",
    "\u0003\u0010\u0003\u0010\u0007\u0010n\n\u0010\f\u0010\u000e\u0010q\u000b",
    "\u0010\u0003\u0011\u0003\u0011\u0003\u0011\u0007\u0011v\n\u0011\f\u0011",
    "\u000e\u0011y\u000b\u0011\u0003\u0011\u0003\u0011\u0003\u0012\u0003",
    "\u0012\u0003\u0012\u0005\u0012\u0080\n\u0012\u0003\u0013\u0003\u0013",
    "\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0014\u0003\u0014",
    "\u0003\u0015\u0005\u0015\u008b\n\u0015\u0003\u0015\u0003\u0015\u0003",
    "\u0015\u0006\u0015\u0090\n\u0015\r\u0015\u000e\u0015\u0091\u0003\u0015",
    "\u0005\u0015\u0095\n\u0015\u0003\u0015\u0005\u0015\u0098\n\u0015\u0003",
    "\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0005\u0015\u009e\n\u0015",
    "\u0003\u0015\u0005\u0015\u00a1\n\u0015\u0003\u0016\u0003\u0016\u0003",
    "\u0016\u0007\u0016\u00a6\n\u0016\f\u0016\u000e\u0016\u00a9\u000b\u0016",
    "\u0005\u0016\u00ab\n\u0016\u0003\u0017\u0003\u0017\u0005\u0017\u00af",
    "\n\u0017\u0003\u0017\u0003\u0017\u0003\u0018\u0006\u0018\u00b4\n\u0018",
    "\r\u0018\u000e\u0018\u00b5\u0003\u0018\u0003\u0018\u0002\u0002\u0019",
    "\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t",
    "\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010",
    "\u001f\u0011!\u0012#\u0002%\u0002\'\u0002)\u0013+\u0002-\u0002/\u0014",
    "\u0003\u0002\f\u0006\u0002&&C\\aac|\u0007\u0002&&2;C\\aac|\u0004\u0002",
    "$$^^\n\u0002$$11^^ddhhppttvv\u0005\u00022;CHch\u0003\u00022;\u0003\u0002",
    "3;\u0004\u0002GGgg\u0004\u0002--//\u0005\u0002\u000b\f\u000f\u000f\"",
    "\"\u00c7\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002",
    "\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002",
    "\u0002\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002",
    "\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002",
    "\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002",
    "\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002",
    "\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002",
    "\u0002\u0002\u0002\u001f\u0003\u0002\u0002\u0002\u0002!\u0003\u0002",
    "\u0002\u0002\u0002)\u0003\u0002\u0002\u0002\u0002/\u0003\u0002\u0002",
    "\u0002\u00031\u0003\u0002\u0002\u0002\u00057\u0003\u0002\u0002\u0002",
    "\u0007;\u0003\u0002\u0002\u0002\t=\u0003\u0002\u0002\u0002\u000b?\u0003",
    "\u0002\u0002\u0002\rC\u0003\u0002\u0002\u0002\u000fF\u0003\u0002\u0002",
    "\u0002\u0011K\u0003\u0002\u0002\u0002\u0013Q\u0003\u0002\u0002\u0002",
    "\u0015S\u0003\u0002\u0002\u0002\u0017U\u0003\u0002\u0002\u0002\u0019",
    "W\u0003\u0002\u0002\u0002\u001be\u0003\u0002\u0002\u0002\u001dg\u0003",
    "\u0002\u0002\u0002\u001fj\u0003\u0002\u0002\u0002!r\u0003\u0002\u0002",
    "\u0002#|\u0003\u0002\u0002\u0002%\u0081\u0003\u0002\u0002\u0002\'\u0087",
    "\u0003\u0002\u0002\u0002)\u00a0\u0003\u0002\u0002\u0002+\u00aa\u0003",
    "\u0002\u0002\u0002-\u00ac\u0003\u0002\u0002\u0002/\u00b3\u0003\u0002",
    "\u0002\u000212\u0007y\u0002\u000223\u0007j\u0002\u000234\u0007g\u0002",
    "\u000245\u0007t\u0002\u000256\u0007g\u0002\u00026\u0004\u0003\u0002",
    "\u0002\u000278\u0007p\u0002\u000289\u0007q\u0002\u00029:\u0007v\u0002",
    "\u0002:\u0006\u0003\u0002\u0002\u0002;<\u0007*\u0002\u0002<\b\u0003",
    "\u0002\u0002\u0002=>\u0007+\u0002\u0002>\n\u0003\u0002\u0002\u0002?",
    "@\u0007c\u0002\u0002@A\u0007p\u0002\u0002AB\u0007f\u0002\u0002B\f\u0003",
    "\u0002\u0002\u0002CD\u0007q\u0002\u0002DE\u0007t\u0002\u0002E\u000e",
    "\u0003\u0002\u0002\u0002FG\u0007v\u0002\u0002GH\u0007t\u0002\u0002H",
    "I\u0007w\u0002\u0002IJ\u0007g\u0002\u0002J\u0010\u0003\u0002\u0002\u0002",
    "KL\u0007h\u0002\u0002LM\u0007c\u0002\u0002MN\u0007n\u0002\u0002NO\u0007",
    "u\u0002\u0002OP\u0007g\u0002\u0002P\u0012\u0003\u0002\u0002\u0002QR",
    "\u0007]\u0002\u0002R\u0014\u0003\u0002\u0002\u0002ST\u0007.\u0002\u0002",
    "T\u0016\u0003\u0002\u0002\u0002UV\u0007_\u0002\u0002V\u0018\u0003\u0002",
    "\u0002\u0002WX\u0007p\u0002\u0002XY\u0007w\u0002\u0002YZ\u0007n\u0002",
    "\u0002Z[\u0007n\u0002\u0002[\u001a\u0003\u0002\u0002\u0002\\f\u0007",
    ">\u0002\u0002]^\u0007>\u0002\u0002^f\u0007?\u0002\u0002_f\u0007@\u0002",
    "\u0002`a\u0007@\u0002\u0002af\u0007?\u0002\u0002bf\u0007?\u0002\u0002",
    "cd\u0007#\u0002\u0002df\u0007?\u0002\u0002e\\\u0003\u0002\u0002\u0002",
    "e]\u0003\u0002\u0002\u0002e_\u0003\u0002\u0002\u0002e`\u0003\u0002\u0002",
    "\u0002eb\u0003\u0002\u0002\u0002ec\u0003\u0002\u0002\u0002f\u001c\u0003",
    "\u0002\u0002\u0002gh\u0007k\u0002\u0002hi\u0007p\u0002\u0002i\u001e",
    "\u0003\u0002\u0002\u0002jk\t\u0002\u0002\u0002ko\b\u0010\u0002\u0002",
    "ln\t\u0003\u0002\u0002ml\u0003\u0002\u0002\u0002nq\u0003\u0002\u0002",
    "\u0002om\u0003\u0002\u0002\u0002op\u0003\u0002\u0002\u0002p \u0003\u0002",
    "\u0002\u0002qo\u0003\u0002\u0002\u0002rw\u0007$\u0002\u0002sv\u0005",
    "#\u0012\u0002tv\n\u0004\u0002\u0002us\u0003\u0002\u0002\u0002ut\u0003",
    "\u0002\u0002\u0002vy\u0003\u0002\u0002\u0002wu\u0003\u0002\u0002\u0002",
    "wx\u0003\u0002\u0002\u0002xz\u0003\u0002\u0002\u0002yw\u0003\u0002\u0002",
    "\u0002z{\u0007$\u0002\u0002{\"\u0003\u0002\u0002\u0002|\u007f\u0007",
    "^\u0002\u0002}\u0080\t\u0005\u0002\u0002~\u0080\u0005%\u0013\u0002\u007f",
    "}\u0003\u0002\u0002\u0002\u007f~\u0003\u0002\u0002\u0002\u0080$\u0003",
    "\u0002\u0002\u0002\u0081\u0082\u0007w\u0002\u0002\u0082\u0083\u0005",
    "\'\u0014\u0002\u0083\u0084\u0005\'\u0014\u0002\u0084\u0085\u0005\'\u0014",
    "\u0002\u0085\u0086\u0005\'\u0014\u0002\u0086&\u0003\u0002\u0002\u0002",
    "\u0087\u0088\t\u0006\u0002\u0002\u0088(\u0003\u0002\u0002\u0002\u0089",
    "\u008b\u0007/\u0002\u0002\u008a\u0089\u0003\u0002\u0002\u0002\u008a",
    "\u008b\u0003\u0002\u0002\u0002\u008b\u008c\u0003\u0002\u0002\u0002\u008c",
    "\u008d\u0005+\u0016\u0002\u008d\u008f\u00070\u0002\u0002\u008e\u0090",
    "\t\u0007\u0002\u0002\u008f\u008e\u0003\u0002\u0002\u0002\u0090\u0091",
    "\u0003\u0002\u0002\u0002\u0091\u008f\u0003\u0002\u0002\u0002\u0091\u0092",
    "\u0003\u0002\u0002\u0002\u0092\u0094\u0003\u0002\u0002\u0002\u0093\u0095",
    "\u0005-\u0017\u0002\u0094\u0093\u0003\u0002\u0002\u0002\u0094\u0095",
    "\u0003\u0002\u0002\u0002\u0095\u00a1\u0003\u0002\u0002\u0002\u0096\u0098",
    "\u0007/\u0002\u0002\u0097\u0096\u0003\u0002\u0002\u0002\u0097\u0098",
    "\u0003\u0002\u0002\u0002\u0098\u0099\u0003\u0002\u0002\u0002\u0099\u009a",
    "\u0005+\u0016\u0002\u009a\u009b\u0005-\u0017\u0002\u009b\u00a1\u0003",
    "\u0002\u0002\u0002\u009c\u009e\u0007/\u0002\u0002\u009d\u009c\u0003",
    "\u0002\u0002\u0002\u009d\u009e\u0003\u0002\u0002\u0002\u009e\u009f\u0003",
    "\u0002\u0002\u0002\u009f\u00a1\u0005+\u0016\u0002\u00a0\u008a\u0003",
    "\u0002\u0002\u0002\u00a0\u0097\u0003\u0002\u0002\u0002\u00a0\u009d\u0003",
    "\u0002\u0002\u0002\u00a1*\u0003\u0002\u0002\u0002\u00a2\u00ab\u0007",
    "2\u0002\u0002\u00a3\u00a7\t\b\u0002\u0002\u00a4\u00a6\t\u0007\u0002",
    "\u0002\u00a5\u00a4\u0003\u0002\u0002\u0002\u00a6\u00a9\u0003\u0002\u0002",
    "\u0002\u00a7\u00a5\u0003\u0002\u0002\u0002\u00a7\u00a8\u0003\u0002\u0002",
    "\u0002\u00a8\u00ab\u0003\u0002\u0002\u0002\u00a9\u00a7\u0003\u0002\u0002",
    "\u0002\u00aa\u00a2\u0003\u0002\u0002\u0002\u00aa\u00a3\u0003\u0002\u0002",
    "\u0002\u00ab,\u0003\u0002\u0002\u0002\u00ac\u00ae\t\t\u0002\u0002\u00ad",
    "\u00af\t\n\u0002\u0002\u00ae\u00ad\u0003\u0002\u0002\u0002\u00ae\u00af",
    "\u0003\u0002\u0002\u0002\u00af\u00b0\u0003\u0002\u0002\u0002\u00b0\u00b1",
    "\u0005+\u0016\u0002\u00b1.\u0003\u0002\u0002\u0002\u00b2\u00b4\t\u000b",
    "\u0002\u0002\u00b3\u00b2\u0003\u0002\u0002\u0002\u00b4\u00b5\u0003\u0002",
    "\u0002\u0002\u00b5\u00b3\u0003\u0002\u0002\u0002\u00b5\u00b6\u0003\u0002",
    "\u0002\u0002\u00b6\u00b7\u0003\u0002\u0002\u0002\u00b7\u00b8\b\u0018",
    "\u0003\u0002\u00b80\u0003\u0002\u0002\u0002\u0012\u0002eouw\u007f\u008a",
    "\u0091\u0094\u0097\u009d\u00a0\u00a7\u00aa\u00ae\u00b5\u0004\u0003\u0010",
    "\u0002\b\u0002\u0002"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function WhereLexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

WhereLexer.prototype = Object.create(antlr4.Lexer.prototype);
WhereLexer.prototype.constructor = WhereLexer;

WhereLexer.EOF = antlr4.Token.EOF;
WhereLexer.T__0 = 1;
WhereLexer.T__1 = 2;
WhereLexer.T__2 = 3;
WhereLexer.T__3 = 4;
WhereLexer.T__4 = 5;
WhereLexer.T__5 = 6;
WhereLexer.T__6 = 7;
WhereLexer.T__7 = 8;
WhereLexer.T__8 = 9;
WhereLexer.T__9 = 10;
WhereLexer.T__10 = 11;
WhereLexer.T__11 = 12;
WhereLexer.OPERATOR = 13;
WhereLexer.ARRAYOPERATOR = 14;
WhereLexer.FIELD = 15;
WhereLexer.STRING = 16;
WhereLexer.NUMBER = 17;
WhereLexer.WS = 18;


WhereLexer.modeNames = [ "DEFAULT_MODE" ];

WhereLexer.literalNames = [ null, "'where'", "'not'", "'('", "')'", "'and'", 
                            "'or'", "'true'", "'false'", "'['", "','", "']'", 
                            "'null'", null, "'in'" ];

WhereLexer.symbolicNames = [ null, null, null, null, null, null, null, null, 
                             null, null, null, null, null, "OPERATOR", "ARRAYOPERATOR", 
                             "FIELD", "STRING", "NUMBER", "WS" ];

WhereLexer.ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", 
                         "T__6", "T__7", "T__8", "T__9", "T__10", "T__11", 
                         "OPERATOR", "ARRAYOPERATOR", "FIELD", "STRING", 
                         "ESC", "UNICODE", "HEX", "NUMBER", "INT", "EXP", 
                         "WS" ];

WhereLexer.grammarFileName = "Where.g4";


WhereLexer.prototype.action = function(localctx, ruleIndex, actionIndex) {
	switch (ruleIndex) {
	case 14:
		this.FIELD_action(localctx, actionIndex);
		break;
	default:
		throw "No registered action for:" + ruleIndex;
	}
};

WhereLexer.prototype.FIELD_action = function(localctx , actionIndex) {
	switch (actionIndex) {
	case 0:
		1
		break;
	default:
		throw "No registered action for:" + actionIndex;
	}
};


exports.WhereLexer = WhereLexer;

